angular.module("Network",[]),angular.module("HomePage",[]),angular.module("Authentication",[]),angular.module("Cameras",[]),angular.module("Camera",[]),angular.module("Users",[]),angular.module("User",[]),angular.module("PiCam",["toastr","ngRoute","ngCookies","ngBootbox","base64","Network","Authentication","HomePage","Cameras","Camera","Users","User"]).config(["$routeProvider","$locationProvider",function(e,o){e.when("/home/",{templateUrl:"modules/HomePage/default.html",controller:"HomePageController"}).when("/cameras",{templateUrl:"modules/Cameras/default.html",controller:"CamerasController"}).when("/cameras/:id",{templateUrl:"modules/Cameras/camera.html",controller:"CameraController"}).when("/cameras/:id/stream",{templateUrl:"modules/Cameras/stream.html",controller:"CameraStreamController"}).when("/cameras/:id/files",{templateUrl:"modules/Cameras/files.html",controller:"CameraFilesController"}).when("/administration/users",{templateUrl:"modules/Users/default.html",controller:"UsersController"}).when("/administration/users/:id",{templateUrl:"modules/Users/user.html",controller:"UserController"}).when("/login",{templateUrl:"modules/Authentication/default.html",controller:"AuthenticationController"}).otherwise({redirectTo:"/home"}),o.html5Mode(!0)}]).run(["$rootScope","$location","HTTPService","breadcrumbs",function(r,o,e,t){r.bodyClass="",r.isLogged=!1,r.SERVER_PATH=SERVER_PATH,r.apikey=null,r.containerClass="",r.breadcrumbs=t,r.logOut=function(){e.logout(function(){r.isLogged=!1,o.path("/login/")})},r.routeContains=function(e){return 0<=o.path().indexOf(e)},r.$on("$locationChangeStart",function(){r.isLogged=e.isLogged(),r.isLogged?(e.initEnv(),e.relogin(function(e,o){o&&r.logOut()})):"/login"===o.path()||r.isLogged||o.path("/login/")})}]).factory("breadcrumbs",["$rootScope","$location",function(e,n){var s=[],o={};return e.$on("$routeChangeSuccess",function(e,o){var r,t,l=n.path().split("/"),a=[];for(l.shift(),r=0;r<l.length;r++)a.push({name:l[r].charAt(0).toUpperCase()+l[r].slice(1),path:(t=r,"/"+l.slice(0,t+1).join("/"))});s=a}),o.getAll=function(){return s},o}]);
angular.module("Authentication").controller("AuthenticationController",["$rootScope","$scope","$location","HTTPService",function(e,n,s,o){"use strict";e.title=TITLEPrefix+"Login",e.bodyClass="signin",e.containerClass="flex-container",n.message=null,n.$on("$destroy",function(){e.bodyClass="",e.containerClass=""}),n.username="",n.password="",n.login=function(){n.message=null,""!==n.username&&""!==n.password?o.login(n.username,n.password,function(){s.path("/cameras/")},function(e){if(null!==e&&void 0!==e.status)switch(e.status){case 401:n.message="Bad login";break;default:n.message="Unknown error"}else n.message="Server downn ?"}):n.message="<strong>Error !</strong> Malformated form"}}]);
angular.module("Camera").controller("CameraController",["$rootScope","$scope","$location","$routeParams","HTTPService","toastr",function(a,t,i,e,r,d){a.title=TITLEPrefix+"Camera",t.Camera={},t.updatedValues={},t.cameraId=null,t.remoteCameras=[],a.containerClass="",t.isLoading=!0,t.$watch("isLoading",function(e){a.containerClass=e?"flex-container":""}),t.$on("$destroy",function(){a.containerClass=""}),t.$watch("[updatedValues.type,updatedValues.definition.uri,updatedValues.definition.scheme,updatedValues.definition.port,updatedValues.definition.apikey]",function(){"Net"===t.updatedValues.type&&void 0!==t.updatedValues.definition.uri&&(Number(t.updatedValues.port)||(t.updatedValues.port=80),r.getAllRemote({scheme:t.updatedValues.definition.scheme,uri:t.updatedValues.definition.uri,port:t.updatedValues.definition.port,apikey:t.updatedValues.definition.apikey,sort:{col:"name",dir:"asc"}},"getRemote",function(e){200===e.status&&(t.remoteCameras=e.data.resources)}))}),t.patchCamera=function(e,a){t.isLoading=!0,r.patch("cameras",e,a,function(e){t.isLoading=!1,200===e.status?(d.success("Action completed"),t.load()):d.error("Can't complete this operation")})},t.updateCamera=function(){t.isLoading=!0,delete t.updatedValues.infos,"add"!==e.id?r.patch("cameras",t.cameraId,t.updatedValues,function(e){t.isLoading=!1,200===e.status?(d.success("Action completed"),t.load()):d.error("Can't complete this operation")}):r.post("cameras",t.updatedValues,function(e){if(t.isLoading=!1,201===e.status)d.success("New camera created"),i.path("/cameras/"+e.data._id);else switch(e.status){case 409:d.error("Can't create new camera because this name is already in use");break;default:d.error("Can't create new camera")}})},t.deleteCamera=function(){t.isLoading=!0,r.delete("cameras",t.cameraId,t.updatedValues,function(e){t.isLoading=!1,200===e.status?(d.success("Camera deleted"),i.path("/cameras/")):d.error("Can't remove this camera")})},t.load=function(){t.isLoading=!0,t.Camera={},"add"!==e.id?(t.cameraId=e.id,r.getOne("cameras",e.id,null,function(e){if(t.isLoading=!1,200===e.status)t.Camera=e.data,t.updatedValues=e.data,delete t.updatedValues._id,a.title=TITLEPrefix+t.Camera.name;else switch(e.status){case 401:d.error("Not authorized");break;case 404:d.error("Camera not found");break;case 500:d.error("Internal server error");break;default:d.error("Can't show this camera")}})):(t.Camera={name:"New camera",type:"Local",definition:{filesDirectory:"/media/freebox",fileIntrustion:"/media/freebox/intrusion.date",motion:{id:0,adminUri:"http://127.0.0.1:8081/0/detection/",streamUri:"http://127.0.0.1:8082/"}}},t.updatedValues=t.Camera,t.isLoading=!1)},t.load()}]);
angular.module("Cameras").controller("CameraFilesController",["$rootScope","$scope","$location","$routeParams","HTTPService",function(a,e,t,i,r){a.title=TITLEPrefix+"Cameras",e.cameraId="",e.Files=[],e.limit=LIMIT,e.currentPage=1,e.pagination=[],e.loadingList=!1,e.load=function(a){e.cameraId=i.id,e.loadingList=!0,e.Files=[],e.currentPage=a,r.getAll("cameras","/"+e.cameraId+"/files/",e.limit,e.currentPage,null,null,function(a){e.loadingList=!1,200===a.status&&(e.pagination=r.returnPagination(a.data.totalRows,a.data.limit,e.currentPage),e.Files=a.data.resources)})},e.load(1)}]);
angular.module("Camera").controller("CameraStreamController",["$rootScope","$scope","$location","$routeParams","HTTPService","toastr",function(r,e,a,t,o,n){r.title=TITLEPrefix+"Camera Stream",e.Camera={},e.cameraId=null,e.load=function(){e.Camera={},e.cameraId=t.id,o.getOne("cameras",t.id,null,function(a){if(e.loadingList=!1,200===a.status)e.Camera=a.data,r.title=TITLEPrefix+e.Camera.name+" stream";else switch(a.status){case 401:n.error("Not authorized");break;case 404:n.error("Camera not found");break;case 500:n.error("Internal server error");break;default:n.error("Can't show this camera")}})},e.load()}]);
angular.module("Cameras").controller("CamerasController",["$rootScope","$scope","$location","HTTPService","toastr",function(a,o,e,n,i){a.title=TITLEPrefix+"Cameras",o.Cameras=[],o.limit=LIMIT,o.currentPage=1,o.pagination=[],o.loadingList=!1,o.patchCamera=function(e,a){var r,t=0,s=o.Cameras.length;for(r=0;r<s;r++)if(o.Cameras[r]._id===e){t=r,o.Cameras[t].isLoading=!0;break}n.patch("cameras",e,a,function(a){200===a.status?(i.success("Action completed"),n.getOne("cameras",e,null,function(a){if(o.Cameras[t].isLoading=!1,200===a.status)o.Cameras[t]=a.data;else switch(a.status){case 401:i.error("Not authorized");break;case 404:i.error("Camera not found, wut ?");break;case 500:i.error("Internal server error while trying reload camera details");break;default:i.error("Can't reload details for this camera")}})):(o.Cameras[t].isLoading=!1,i.error("Can't complete this operation"))})},o.deleteCamera=function(a){n.delete("cameras",a,o.updatedValues,function(a){200===a.status?(o.load(o.currentPage),i.success("Camera deleted")):i.error("Can't remove this camera")})},o.viewCameraDetails=function(a){e.path("/cameras/"+a)},o.load=function(a){o.loadingList=!0,o.Cameras=[],o.currentPage=a,n.getAll("cameras","",o.limit,o.currentPage,null,{id:"name",asc:!0},function(a){o.loadingList=!1,200===a.status&&(o.pagination=n.returnPagination(a.data.totalRows,a.data.limit,o.currentPage),o.Cameras=a.data.resources)})},o.load(1)}]);